---

- name: Clean Directories
  become: yes
  become_user: root
  file:
    state: absent
    path: "{{ item }}"
  with_items:
    - "{{ OSB_DOMAIN_HOME }}"

- name: Create Directories
  become: yes
  become_user: root
  file:
    state: directory
    path: "{{ item }}"
    owner: "{{ install_user }}"
    group: "{{ install_group }}"
    mode: 0755
  with_items:
    - "{{ STAGE_DIR }}"

- name: Copy OSB Domain Creation Script to Stage Directory
  become: yes
  become_user: "{{ install_user }}"
  template:
   src:  roles/fmw-domain/files/createOSBDomain.py
   dest: "{{ STAGE_DIR }}/createOSBDomain.py"

- name: Creating OSB Domain "{{ OSB_DOMAIN_HOME }}"
  become: yes
  become_user: "{{ install_user }}"
  command: "./wlst.sh {{ STAGE_DIR }}/createOSBDomain.py"
  args:
    chdir: "{{ ORACLE_BIN }}"
  environment:
    JAVA_HOME: "{{ JAVA_HOME }}"

- name: Create OSB AdminServer log and other needed dirs
  become: yes
  become_user: root
  file:
    state: directory
    path: "{{ item }}"
    owner: "{{ install_user }}"
    group: "{{ install_group }}"
    mode: 0755
  with_items:
    - "{{ OSB_DOMAIN_HOME }}/servers/AdminServer/logs"
    - "{{ ORACLE_HOME }}/oracle_common/common/nodemanager/security"

- name: Enable JDBC Remote for OSB
  become: yes
  become_user: "{{ install_user }}"
  replace:
    destfile: "{{ OSB_DOMAIN_HOME }}/bin/setDomainEnv.sh"
    regexp:   'Dweblogic.jdbc.remoteEnabled=false'
    replace:  'Dweblogic.jdbc.remoteEnabled=true'
    backup: yes

- name: Enable Production Mode
  become: yes
  become_user: "{{ install_user }}"
  replace:
    destfile: "{{ OSB_DOMAIN_HOME }}/bin/setDomainEnv.sh"
    regexp:   'PRODUCTION_MODE=""'
    replace:  'PRODUCTION_MODE="true"'
    backup: yes

- name: Copy setclassPath script Domain home
  become: yes
  become_user: "{{ install_user }}"
  template:
   src:  roles/fmw-domain/files/setclassPath.sh
   dest: "{{ OSB_DOMAIN_HOME }}/security"

- name: Set WL environment
  become: yes
  become_user: "{{ install_user }}"
  shell: "sh setWLSEnv.sh"
  args:
    chdir: "{{ WLSERVER }}/server/bin"
  environment:
    JAVA_HOME: "{{ JAVA_HOME }}"

- name: copying createDemoKey script 
  become: yes
  become_user: "{{ install_user }}"
  copy:
    src: roles/fmw-domain/files/createDemoKey.sh
    dest: "{{  OSB_DOMAIN_HOME }}/security/createDemoKey.sh"
    mode: 0755

- name: create DemoKey file
  become: yes
  become_user: "{{ install_user }}"
  shell: "sh createDemoKey.sh"
  args:
    chdir: "{{ OSB_DOMAIN_HOME }}/security"
  environment:
    JAVA_HOME: "{{ JAVA_HOME }}"

- name: Fetch Keyfile for OSB
  become: yes
  become_user: "{{ install_user }}"
  fetch:
    src:  "{{ OSB_DOMAIN_HOME }}/security/DemoIdentity.jks"
    dest: /tmp/DemoIdentity.jks
    flat: yes
    fail_on_missing: yes

- name: Start OSB AdminServer
  become: yes
  become_user: "{{ install_user }}"
  shell: "nohup ./startWebLogic.sh >| {{ OSB_DOMAIN_HOME }}/servers/AdminServer/logs/AdminServer.out 2>&1 &"
  args:
    chdir: "{{ OSB_DOMAIN_HOME }}"
  environment:
    JAVA_HOME: "{{ JAVA_HOME }}"

- name: Confirming OSB Admin Server is reachable archiving the domain
  wait_for:
    host: "{{ ADMIN }}"
    port: "{{ PORT_B }}"
    state: started

- name: Clean Directories
  become: yes
  become_user: root
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ STAGE_DIR }}"

- include: roles/fmw-domain/tasks/osbdomain-copy.yml
