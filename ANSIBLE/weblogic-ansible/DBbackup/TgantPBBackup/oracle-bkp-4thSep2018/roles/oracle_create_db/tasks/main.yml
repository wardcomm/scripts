---

- include_vars: secrets.yml
  no_log: true

- name: check if db has already been installed
  command: grep -q "^{{ oracle_db_name }}:" /etc/oratab
  ignore_errors: yes
  register: oracle_installed
  failed_when: oracle_installed.rc == 0

- include_role:
    name: oracle_api_services
    tasks_from: db_inventory_insertion.yml
  vars:
   oracle_db_name: "{{ oracle_db_name }}"
  tags:
  - apex_api

- name: create tmp dir
  file:
    group: "{{ oracle_group }}"
    owner: "{{ oracle_user }}"
    path: "{{ oracle_tmp }}"
    state: directory
    recurse: yes

- name: create 'create_db' rsp file
  template:
    owner: "{{ oracle_user }}"
    src: 12c_create_db_rsp.j2
    dest: "{{ oracle_tmp }}/create_db_{{ oracle_db_name }}.rsp"
  diff: false

- import_role:
    name: oracle_api_services
    tasks_from: db_checklist_update.yml
  vars:
    update_db_cklist_body:
      - { key: checklist_type , value: "8" }
      - { key: db_install_status , value: "IN PROGRESS" }
  tags:
  - apex_api

- block:  
  - name: create database
    become: yes
    become_user: "{{ oracle_user }}"
    environment: "{{ ora_user_env }}"
    shell: |
      nohup dbca -silent -responseFile {{ oracle_tmp }}/create_db_{{ oracle_db_name }}.rsp 2>&1 | tee {{ oracle_tmp }}/create_db_{{ oracle_db_name }}.out &
      sleep 30
      while true
      do 
        c=$(ps -ef | grep -v grep | grep dbca | grep {{ oracle_db_name }} | grep java | wc -l)
        [ $c -eq 0 ] && break
        sleep 10
      done
    args:
      executable: /bin/bash

  rescue:
  - import_role:
      name: oracle_api_services
      tasks_from: db_checklist_update.yml
    vars:
      update_db_cklist_body:
        - { key: db_install_status , value: "FAILED" }
    tags:
    - apex_api
  
  - name: Instance Creation Failed
    fail:
      msg: Creation of {{ oracle_db_name }} failed

- import_role:
    name: oracle_api_services
    tasks_from: db_checklist_update.yml
  vars:
    update_db_cklist_body:
      - { key: db_install_status , value: "SUCCESSFUL" }
  tags:
  - apex_api