---

- name: Get {{ curr_db_name }} Database Home
  environment: "{{ ora_user_env }}"
  command: srvctl config database -d {{ curr_db_name }}
  changed_when: False
  register: db_config

- set_fact:
    oracle_db_name: "{{ curr_db_name }}"
    oracle_home: "{{ db_config.stdout | regex_search('home:') | regex_replace('home: (.*)','\\1')}}"

- name: Check {{ curr_db_name }} Database Status
  environment: "{{ ora_user_env }}"
  command: srvctl status database -d {{ curr_db_name }}
  changed_when: False
  register: db_status

# - name: Start {{ oracle_db_name }} Database
#   environment: "{{ ora_user_env }}"
#   command: srvctl start database -db {{ oracle_db_name }}
#   when: "'Database is running.' not in db_status.stdout"

- include_role:
    name: oracle_admin
    tasks_from: start_db.yml
  vars:
    oracle_home: "{{ oracle_grid_home }}"
  when: "'Database is running.' not in db_status.stdout"
  # when: 
  # - patch_type == 'RDBMS'
  # - db_name_list | length > 0
  # - inventory_hostname == master_node

- name: Wait for DB to start
  pause:
    seconds: 60

- name: get oracle_sid
  shell: ps -ef | grep smon | grep {{ oracle_db_name }} | grep -v grep | awk '{ print $8 }'
  register: ps_grep_smon
  changed_when: False

- name: set oracle_sid
  set_fact:
    oracle_sid: "{{ ps_grep_smon.stdout | regex_replace('.*_smon_(.*)', '\\1') }}"

- block: 

  - name: Run datapatch on {{ oracle_db_name }}
    become: yes
    become_user: "{{ oracle_user }}"
    environment: "{{ ora_user_env }}"
    command: datapatch -verbose
    ignore_errors: yes
    register: datapatch

  - name: save datapatch stdout
    copy:
      dest: "{{ oracle_tmp }}/{{ oracle_db_name }}_datapatch.out"
      content: "{{ datapatch.stdout }}"
    changed_when: False

  - name: save datapatch stderr
    copy:
      dest: "{{ oracle_tmp }}/{{ oracle_db_name }}_datapatch.err"
      content: "{{ datapatch.stderr }}"
    changed_when: False
    when: datapatch.stderr_lines | length > 0

  - name: add failures to datapatch_failures
    set_fact:
      datapatch_failures: "{{ datapatch_failures }} + ['{{ oracle_db_name }}']"
    when: datapatch is failed
  when: oracle_sid != ''