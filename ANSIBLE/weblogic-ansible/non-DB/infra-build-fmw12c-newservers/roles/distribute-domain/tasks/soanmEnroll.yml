---

 - name: Clean Directories
   become: yes
   become_user: root
   file:
     path: "{{ item }}"
     owner: "{{ install_user }}"
     group: "{{ install_group }}"
     state: absent
   with_items:
     - "{{ STAGE_DIR }}"

 - name: Create Directories
   become: yes
   become_user: root
   file:
     path: "{{ item }}"
     owner: "{{ install_user }}"
     group: "{{ install_group }}"
     state: directory
     mode: 0755
   with_items:
     - "{{ STAGE_DIR }}"
     - "{{ COMMON }}/nodemanager"
     - "{{ COMMON }}/nodemanager/security"

 - name: Copy Nodemanager Properties
   become: yes
   become_user: root
   template:
     src:  roles/distribute-domain/files/nodemanager.properties.soa
     dest: "{{ COMMON }}/nodemanager/nodemanager.properties.soa"
     owner: "{{ install_user }}"
     group: "{{ install_group }}"
     mode: 0777

 - name: Copy Node Manager Domains file to target directories
   become: yes
   become_user: root
   template:
     src:   roles/distribute-domain/files/soanodemanager.domains
     dest:  "{{ item }}/soanodemanager.domains"
     owner: "{{ install_user }}"
     group: "{{ install_group }}"
   with_items:
     - "{{ COMMON }}/nodemanager"

 - name: Copy StartNM script
   become: yes
   become_user: root
   template:
     src:  roles/distribute-domain/files/soarestartNM.sh
     dest: "{{ WLSERVER }}/server/bin/soarestartNM.sh"
     owner: "{{ install_user }}"
     group: "{{ install_group }}"
     mode: 0777

 - name: Copy register node manager script to Stage directory
   become: yes
   become_user: root
   template:
     src:  roles/distribute-domain/files/soaenrollNM.py
     dest: "{{ STAGE_DIR }}/soaenrollNM.py"
     owner: "{{ install_user }}"
     group: "{{ install_group }}"

 - name: Assure working keystore
   become: yes
   become_user: "{{ install_user }}"
   shell: " cp {{ SOA_DOMAIN_HOME }}/security/DemoIdentity.jks {{ COMMON }}/nodemanager/security/DemoIdentity.jks "

 - name: Register Node Manager with the domain for managed servers
   become: yes
   become_user: "{{ install_user }}"
   command: "./wlst.sh {{ STAGE_DIR }}/soaenrollNM.py"
   args:
     chdir: "{{ COMMON }}/bin"
   environment:
     JAVA_HOME: "{{ JAVA_HOME }}"

 - name: Clean Directories
   become: yes
   become_user: root
   file:
     path: "{{ item }}"
     state: absent
   with_items:
     - "{{ STAGE_DIR }}"

