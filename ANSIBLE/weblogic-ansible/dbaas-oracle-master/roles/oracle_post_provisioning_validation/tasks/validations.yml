---

- name: check oracle user
  user:
    name: oracle
    state: present
  check_mode: yes
  changed_when: False
  register: oracle_user_check

- name: check oracle groups
  group:
    name: "{{ group_name }}"
    state: present
  check_mode: yes
  changed_when: False
  register: oracle_groups
  loop:
  - oinstall
  - dba
  loop_control:
    loop_var: group_name

- name: task only for db'
  block:
    - name: execute tablespace_size sql file
      become: yes
      become_user: "{{ oracle_user }}"
      environment: "{{ ora_user_env }}"
      shell: sqlplus -S -NOLOGINTIME  / as sysdba @{{ sql_file_path }}/verify_tablespace.sql
      register: tablespace_names_result
      changed_when: false

    - name: execute verify alter sql script
      become: yes
      become_user: "{{ oracle_user }}"
      environment: "{{ ora_user_env }}"
      shell: sqlplus -S -NOLOGINTIME / as sysdba @{{ sql_file_path }}/verify_alter_profile.sql
      register: verify_alter_profile_result
      changed_when: false

    - name: execute verify created profile sql script
      become: yes
      become_user: "{{ oracle_user }}"
      environment: "{{ ora_user_env }}"
      shell: sqlplus -S -NOLOGINTIME / as sysdba @{{ sql_file_path }}/verify_created_profile.sql
      register: verify_created_profile_result
      changed_when: false

    - name: execute sql script to verify snapshot interval
      become: yes
      become_user: "{{ oracle_user }}"
      environment: "{{ ora_user_env }}"
      shell: sqlplus -S -NOLOGINTIME / as sysdba @{{ sql_file_path }}/verify_snapshot_interval.sql
      register: verify_snapshot_interval_result
      changed_when: false

    - name: execute sql script to verify parallel force
      become: yes
      become_user: "{{ oracle_user }}"
      environment: "{{ ora_user_env }}"
      shell: sqlplus -S -NOLOGINTIME / as sysdba @{{ sql_file_path }}/verify_parallel_force.sql
      register: verify_parallel_force_result
      changed_when: false

    - name: execute sql script to verify recyclebin force
      become: yes
      become_user: "{{ oracle_user }}"
      environment: "{{ ora_user_env }}"
      shell: sqlplus -S -NOLOGINTIME / as sysdba @{{ sql_file_path }}/verify_recyclebin_status.sql
      register: verify_recyclebin_status_result
      changed_when: false

    - name: execute sql script to modify block tracking
      become: yes
      become_user: "{{ oracle_user }}"
      environment: "{{ ora_user_env }}"
      shell: sqlplus -S -NOLOGINTIME / as sysdba @{{ sql_file_path }}/verify_block_tracking.sql
      register: verify_block_tracking_result
      changed_when: false

    - name: execute sql script to verify db files
      become: yes
      become_user: "{{ oracle_user }}"
      environment: "{{ ora_user_env }}"
      shell: sqlplus -S -NOLOGINTIME / as sysdba @{{ sql_file_path }}/verify_db_files.sql
      register: verify_db_files_result
      changed_when: false


    - name: execute sql script to verify redo logs
      become: yes
      become_user: "{{ oracle_user }}"
      environment: "{{ ora_user_env }}"
      shell: sqlplus -S -NOLOGINTIME / as sysdba @{{ sql_file_path }}/verify_redo_logs.sql
      register: verify_redo_logs_result
      changed_when: false

    - name: execute sql script to verify redo logs
      become: yes
      become_user: "{{ oracle_user }}"
      environment: "{{ ora_user_env }}"
      shell: sqlplus -S -NOLOGINTIME / as sysdba @{{ sql_file_path }}/verify_redo_logs.sql
      register: verify_redo_logs_result
      changed_when: false

    - name: execute sql script to verify dba directories
      become: yes
      become_user: "{{ oracle_user }}"
      environment: "{{ ora_user_env }}"
      shell: sqlplus -S -NOLOGINTIME / as sysdba @{{ sql_file_path }}/verify_dba_directories.sql
      register: verify_dba_directories_result
      changed_when: false
  when: oracle_home != "" and oracle_context != 'grid'

- set_fact:
    exp_disk_size: "{% if ansible_mounts | json_query('[?mount == `/u01/app/oracle/exp`]') == [] -%}unmounted
                    {%- else -%}{{ ansible_mounts | json_query('[?mount == `/u01/app/oracle/exp`].size_total|[0]') }}
                    {%- endif -%}"

- set_fact:
    ggs_disk_size: "{% if ansible_mounts | json_query('[?mount == `/u01/app/oracle/ggs`]') == [] -%}unmounted
                    {%- else -%}{{ ansible_mounts | json_query('[?mount == `/u01/app/oracle/ggs`].size_total|[0]') }}
                    {%- endif -%}"
  when: golden_gate_check


- set_fact:
    checklist:
    - name: oracle user
      expected_value: "900"
      actual_value: "{{ oracle_user_check.uid }}"
      status: "{% if oracle_user_check.uid != 900 -%}FAILED
                {%- else -%}PASSED
                {%- endif %}"
    - name: oracle groups
      expected_value: 900, 901 
      actual_value: "{{ oracle_groups | json_query('results[?name == `oinstall`] | [0].gid') }},
                      {{ oracle_groups | json_query('results[?name == `dba`] | [0].gid') }}"
      status: "{% if oracle_groups | json_query('results[?name == `oinstall`] | [0].gid') != 900 or
                      oracle_groups | json_query('results[?name == `dba`] | [0].gid') != 901 -%}FAILED
                {%- else -%}PASSED
                {%- endif %}"
    - name: EXP Mount (in GiB)
      expected_value: 299
      actual_value: "{{ (exp_disk_size | int / 1024 | pow(3)) | round | int }}"
      status: "{% if exp_disk_size == 'unmounted' or
                  (exp_disk_size | int / 1024 | pow(3)) | round | int < 299 -%}FAILED
               {%- else -%}PASSED
               {%- endif -%}"
    - name: GG Mount (in GiB)
      expected_value: "{% if golden_gate_check -%}300
                       {%- else -%}
                       {%- endif -%}"
      actual_value: "{% if golden_gate_check -%}{{ (ggs_disk_size | int / 1024 | pow(3)) | round | int }}
                       {%- else -%}
                       {%- endif -%}"
      status: "{% if not golden_gate_check -%}NOT_CHECKED
               {%- elif ggs_disk_size == 'unmounted' or
                       (ggs_disk_size | int / 1024 | pow(3)) | round | int < 300 -%}FAILED
               {%- else -%}PASSED
               {%- endif -%}"
    - name: results of validation done using sql queries
      expected_value: ""
      actual_value: 
          - check_type: "tablespace name and size"
            value: "{{ tablespace_names_result.stdout_lines | default('')}}"
          - check_type: "alter profile"
            value: "{{ verify_alter_profile_result.stdout_lines | default('')}}"
          - check_type: "created profile"
            value: "{{ verify_created_profile_result.stdout_lines | default('') }}"
          - check_type: "snapshot interval"
            value: "{{ verify_snapshot_interval_result.stdout_lines | default('')}}"
          - check_type: "verify parallel force"
            value: "{{ verify_parallel_force_result.stdout_lines | default('')}}" 
          - check_type: "verify recycle bin status"
            value: "{{ verify_recyclebin_status_result.stdout_lines | default('')}}" 
          - check_type: "verify block tracking"
            value: "{{ verify_block_tracking_result.stdout_lines | default('')}}"          
          - check_type: "verify db files"
            value: "{{ verify_db_files_result.stdout_lines | default('')}}"     
          - check_type: "verify redo logs"
            value: "{{ verify_redo_logs_result.stdout_lines | default('') }}"  
          - check_type: "verify dba directories"
            value: "{{ verify_dba_directories_result.stdout_lines | default('') }}"     
      status: ""

-  debug:
    var: checklist

- name: store the result in a json
  copy:
    dest: "{% if oracle_context == 'grid' -%}{{ oracle_tmp }}/grid_post_validaton_result.json
              {%- else -%}{{ oracle_tmp }}/{{ oracle_db_name }}_post_validaton_result.json
              {%- endif %}"
    content: "{{ checklist }}"

- name: Create json template for verify result
  template:
    src: post_validaton_result_list.json.j2
    dest: "{{ oracle_tmp }}/{{ oracle_db_name }}_post_validaton_result_list.json"

- name: Check for Post validation Failures
  fail:
    msg: "{% if checklist | json_query('[?status == `FAILED`]') | length == 1 -%}You have 1 failed check
          {%- else -%}You have {{ checklist | json_query('[?status == `FAILED`]') | length }} failed checks
          {%- endif %}"
  when: checklist | json_query('[?status == `FAILED`]') | length > 1
  tags: postval_fail
    
