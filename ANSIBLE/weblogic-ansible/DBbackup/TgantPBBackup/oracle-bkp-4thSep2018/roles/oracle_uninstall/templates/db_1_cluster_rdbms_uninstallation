#!/bin/expect -f
#
# This Expect script was generated by autoexpect on Thu Aug  2 03:14:27 2018
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
                          ;# script wasn't run conservatively originally
if {$force_conservative} {
        set send_slow {1 .1}
        proc send {ignore arg} {
                sleep .1
                exp_send -s -- $arg
        }
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn ./12.1.0.2/db_1/deinstall/deinstall
match_max 100000
expect -exact "Checking for required files and bootstrapping ...\r
Please wait ...\r
Location of logs /u01/app/oraInventory/logs/\r
\r
############ ORACLE DECONFIG TOOL START ############\r
\r
\r
######################### DECONFIG CHECK OPERATION START #########################\r
## \[START\] Install check configuration ##\r
\r
\r
Checking for existence of the Oracle home location /u01/app/oracle/product/12.1.0.2/db_1\r
Oracle Home type selected for deinstall is: Oracle Real Application Cluster Database\r
Oracle Base selected for deinstall is: /u01/app/oracle\r
Checking for existence of central inventory location /u01/app/oraInventory\r
Checking for existence of the Oracle Grid Infrastructure home /u01/app/12.1.0.2/grid\r
The following nodes are part of this cluster: poc3,poc2,poc1\r
Active Remote Nodes are poc1,poc2\r
Checking for sufficient temp space availability on node(s) : 'poc3,poc1,poc2'\r
\r
## \[END\] Install check configuration ##\r
\r
\r
Network Configuration check config START\r
\r
Network de-configuration trace file location: /u01/app/oraInventory/logs/netdc_check2018-08-02_03-15-06-AM.log\r
\r
Network Configuration check config END\r
\r
Database Check Configuration START\r
\r
Database de-configuration trace file location: /u01/app/oraInventory/logs/databasedc_check2018-08-02_03-15-12-AM.log\r
\r
Use comma as separator when specifying list of values as input\r
\r
Specify the list of database names that are configured in this Oracle home \[orcl11g\]: "
send -- "orcl11g"
expect -exact "orcl11g"
send -- "\r"
expect -exact "\r
\r
###### For Database 'orcl11g' ######\r
\r
RAC Database\r
The nodes on which this database has instances: \[poc1, poc2, poc3\]\r
The instance names: \[orcl11g1, orcl11g2, orcl11g3\]\r
The local instance name on node: orcl11g3 \r
The diagnostic destination location of the database: /u01/app/oracle/diag/rdbms/orcl11g\r
Storage type used by the Database: ASM\r
\r
The details of database(s) orcl11g have been discovered automatically. Do you still want to modify the details of orcl11g database(s)? \[n\]: "
send -- "n\r"
expect -exact "n\r
\r
Database Check Configuration END\r
Oracle Configuration Manager check START\r
OCM check log file location : /u01/app/oraInventory/logs//ocm_check8710.log\r
Oracle Configuration Manager check END\r
\r
######################### DECONFIG CHECK OPERATION END #########################\r
\r
\r
####################### DECONFIG CHECK OPERATION SUMMARY #######################\r
Oracle Grid Infrastructure Home is: /u01/app/12.1.0.2/grid\r
The following nodes are part of this cluster: poc3,poc2,poc1\r
Active Remote Nodes are poc1,poc2\r
The cluster node(s) on which the Oracle home deinstallation will be performed are:poc3,poc1,poc2\r
Oracle Home selected for deinstall is: /u01/app/oracle/product/12.1.0.2/db_1\r
Inventory Location where the Oracle home registered is: /u01/app/oraInventory\r
The following databases were selected for de-configuration : orcl11g\r
Database unique name : orcl11g\r
Storage used : ASM\r
Checking the config status for CCR\r
poc3 : Oracle Home exists with CCR directory, but CCR is not configured\r
poc1 : Oracle Home exists with CCR directory, but CCR is not configured\r
poc2 : Oracle Home exists with CCR directory, but CCR is not configured\r
CCR check is finished\r
Do you want to continue (y - yes, n - no)? \[n\]: "
send -- "yy^?"
expect -exact "
send -- "\r"
expect eof
