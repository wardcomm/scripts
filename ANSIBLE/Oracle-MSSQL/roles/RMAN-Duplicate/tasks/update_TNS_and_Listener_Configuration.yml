---


- name: get scan_port
  environment: "{{ ora_user_env }}"
  command: srvctl config listener -l Listener
  changed_when: False
  register: listener_config
- set_fact:
    scan_port: "{{ listener_config.stdout | regex_search('TCP:.*') | regex_replace('TCP:(.*)','\\1') }}"

- name: Determine Cluster/SA and set tns_hosts
  environment: "{{ ora_user_env }}"
  command: srvctl config scan
  ignore_errors: yes
  changed_when: False
  register: scan_config
- set_fact:
    tns_hosts_source: "{{ ansible_play_hosts[0] }}"
    tns_hosts_target: "{{ ansible_play_hosts[1] }}"
  when: "'scan object is not supported in Oracle Restart' in scan_config.stdout"

- set_fact:
    tns_hosts_source: "{{ scan_config.stdout | regex_search('SCAN name:.*') | regex_replace('SCAN name: (.*), Network:.*','\\1') }}"
    tns_hosts_target: "{{ scan_config.stdout | regex_search('SCAN name:.*') | regex_replace('SCAN name: (.*), Network:.*','\\1') }}"
  when: scan_config is not failed

- name: Create tnsnames.ora if not exists
  become: yes
  become_user: '{{ oracle_user }}'
  environment: "{{ ora_user_env }}"
  file:
    path: "{{ oracle_home }}/network/admin/tnsnames.ora"
    state: touch

- name: Add TNSNAMES In RMAN- Source Server
  become: yes
  become_user: '{{ oracle_user }}'
  environment: "{{ ora_user_env }}"
  block:
  - name: Add target details in TNS
    lineinfile:
      path: "{{ oracle_home }}/network/admin/tnsnames.ora"
      line: "{{ target_db }} = 
                  (DESCRIPTION =
                  (ADDRESS_LIST =
                  (ADDRESS = (PROTOCOL = TCP)(HOST = {{ tns_hosts_target }})(PORT = {{ scan_port }}))
                  )
                  (CONNECT_DATA =
                  (ORACLE_SID = {{ oracle_db_name }})
                  (UR = A)
                  )
                  ) # line added by Ansible"
  - name: Add source details in TNS
    lineinfile:
      path: "{{ oracle_home }}/network/admin/tnsnames.ora"
      line: "{{ source_db }} = 
                  (DESCRIPTION =
                  (ADDRESS_LIST =
                    (ADDRESS = (PROTOCOL = TCP)(HOST = {{ tns_hosts_source }})(PORT = {{ scan_port }}))
                  )
                  (CONNECT_DATA =
                  (ORACLE_SID = {{ oracle_db_name }})
                  (UR = A)
                  )
                  ) # line added by Ansible"

- name: Static Listener Configuration and Reload listener-Target Server
  become: yes
  become_user: '{{ oracle_user }}'
  environment: "{{ ora_user_env }}"
  block:
    - name: Static Listener Configuration
      lineinfile:
        path: "{{ oracle_grid_home }}/network/admin/listener.ora"
        line: "SID_LIST_LISTENER =
                        (SID_LIST =
                          (SID_DESC =
                            (ORACLE_HOME = {{ oracle_home }})
                            (SID_NAME = {{ oracle_db_name }})
                          )
                        ) # line added by Ansible"
                        
    - name: Reload the lister-Target Server
      command: lsnrctl reload
  when: inventory_hostname != master_node
