---

- name: get oracle_sid
  shell: ps -ef | grep smon | grep {{ oracle_db_name }} | grep -v grep | awk '{ print $8 }'
  register: ps_grep_smon
  changed_when: False

- name: set oracle_sid
  set_fact:
    oracle_sid: "{{ ps_grep_smon.stdout | regex_replace('asm_smon_(.*)', '\\1') }}"

- import_tasks: acfs_driver_check.yml
  tags: acfs_install

- include_tasks: acfs_driver_install.yml
  when: not acfsdriver_installed
  tags: acfs_install

- name: create tmp dir
  file:
    group: "{{ oracle_group }}"
    owner: "{{ oracle_user }}"
    path: "{{ oracle_tmp }}"
    state: directory
    recurse: yes

- name: check currently mounted ASM DGs
  become: yes
  become_user: "{{ oracle_user }}"
  environment: "{{ ora_user_env }}"
  command: asmcmd lsdg --suppressheader
  register: asm_disks_list
  changed_when: False
- set_fact:
    asm_disks: "{{ asm_disks | default('') + '\n' + asm_line | regex_search('MOUNTED.*') }}'"
  loop: "{{ asm_disks_list.stdout_lines }}"
  loop_control:
    loop_var: asm_line
    
- include_tasks: configure_acfs.yml
  vars:
    diskgroup: "{{ exp_dg }}"
  when: 
  - create_exp_diskgroup
  - oracle_base + '/' + exp_dg.dir not in ansible_mounts | json_query('[].mount')

- include_tasks: configure_acfs.yml
  vars:
    diskgroup: "{{ gg_dg }}"
  when: 
  - create_gg_diskgroup
  - oracle_base + '/' + gg_dg.dir not in ansible_mounts | json_query('[].mount')