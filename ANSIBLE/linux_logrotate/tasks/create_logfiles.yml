---
- name: Set a log directories fact
  set_fact:
    logfile: "{{ item.1 | dirname }}"
  register: r
  with_subelements:
    - "{{ logrotate_scripts | map(attribute='rules') | list | sum(start=[]) }}"
    - paths
    - skip_missing: true
  when: logrotate_scripts is defined

- name: Make a log directories list
  set_fact:
    logdirs: "{{ r.results | map(attribute='ansible_facts.logfile') | unique | list }}"
  when: logrotate_scripts is defined

- name: Create empty log directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: "{{ logrotate_logfiles_group }}"
    mode: 0755
  with_items: "{{ logdirs }}"
  when: logrotate_scripts is defined

- name: Set a log files fact
  set_fact:
    logfile: "{{ item.1 }}"
  register: r
  with_subelements:
    - "{{ logrotate_scripts | map(attribute='rules') | list | sum(start=[]) }}"
    - paths
    - skip_missing: true
  when: logrotate_scripts is defined

- name: Make a log files list
  set_fact:
    logfiles: "{{ r.results | map(attribute='ansible_facts.logfile') | unique | list }}"
  when: logrotate_scripts is defined

- name: Create empty logfiles
  copy:
    content: ""
    dest: "{{ item }}"
    force: false
    owner: root
    group: "{{ logrotate_logfiles_group }}"
    mode: 0755
  with_items: "{{ logfiles }}"
  when: logrotate_scripts is defined
