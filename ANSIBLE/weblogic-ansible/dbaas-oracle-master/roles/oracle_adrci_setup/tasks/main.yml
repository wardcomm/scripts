---
- name: create tmp dir 
  file:
    group: "{{ oracle_group }}"
    owner: "{{ oracle_user }}"
    path: "{{ oracle_tmp }}"
    state: directory
    recurse: yes

- name: get oracle grid home
  shell: "ps -ef | grep ohasd | grep {{ install_base }}/{{ grid_version }}/ |  grep -v grep | awk -F ' ' '{ print $8 }'"
  register: oracle_ohasd_process

- name: set grid home
  set_fact:
    oracle_grid_home: "{{ oracle_ohasd_process.stdout | regex_replace('/bin/ohasd.bin', '') }}"
    
- name: get oracle_sid
  shell: ps -ef | grep smon | grep {{ oracle_db_name }} | grep -v grep | awk '{ print $8 }'
  register: ps_grep_smon
  changed_when: False

- name: set oracle_sid
  set_fact:
    oracle_sid: "{{ ps_grep_smon.stdout | regex_replace('ora_smon_(.*)', '\\1') }}"

- name: show adrci homes
  become: yes 
  become_user: "{{ oracle_user }}"
  environment: "{{ ora_user_env }}"
  shell: adrci exec="SHOW HOMES"
  register: adrci_homes

- name: make adrci script from jinja template
  become: yes
  become_user: '{{ oracle_user }}'
  template: 
    src: adrci_setup.j2
    dest: "{{ oracle_base }}/adrci_setup.txt"

- name: run adrci script
  become: yes
  become_user: "{{ oracle_user }}"
  environment: "{{ ora_user_env }}"
  shell: "adrci script={{ oracle_base }}/adrci_setup.txt"
  register: adrci_script_output

- name: save output of adrci
  copy:
    dest: "{{ oracle_tmp }}/adrci_setup.out"
    content: "adrci_script_output.stdout"

- name: save error of adrci
  copy:
    dest: "{{ oracle_tmp }}/cluvfy_stderr.err"
    content: "{{ adrci_script_output.stderr }}"
  changed_when: False
  when: adrci_script_output.stderr_lines | length > 0
  